<<<<<<< HEAD
+function($) {
    "use strict";
    var FlashMessage = function(options, el) {
        var options = $.extend({}, FlashMessage.DEFAULTS, options), $element = $(el);
        $("body > p.flash-message").remove();
        if ($element.length == 0) $element = $("<p/>").addClass(options.class).html(options.text);
        $element.addClass("flash-message fade");
        $element.attr("data-control", null);
        $element.append('<button type="button" class="close" aria-hidden="true">&times;</button>');
        $element.on("click", "button", remove);
        $element.on("click", remove);
        $(document.body).append($element);
        setTimeout(function() {
            $element.addClass("in");
        }, 1);
        var timer = window.setTimeout(remove, options.interval * 1e3);
        function removeElement() {
            $element.remove();
        }
        function remove() {
            window.clearInterval(timer);
            $element.removeClass("in");
            $.support.transition && $element.hasClass("fade") ? $element.one($.support.transition.end, removeElement).emulateTransitionEnd(500) : removeElement();
        }
    };
    FlashMessage.DEFAULTS = {
        "class": "success",
        text: "Default text",
        interval: 2
    };
    if ($.oc === undefined) $.oc = {};
    $.oc.flashMsg = FlashMessage;
    $(document).render(function() {
        $("[data-control=flash-message]").each(function() {
            $.oc.flashMsg($(this).data(), this);
        });
    });
}(window.jQuery);
=======
var App = {};

window.App = App;

(function($, App) {
    $(document).ready(function() {
        for (key in App.Routes) {
            if (key === "init") {
                App.Routes[key]();
            }
            if ($(key).length) {
                App.Routes[key]();
            }
        }
    });
})(jQuery, window.App);

(function($, App) {
    "use strict";
    var self = App.Nav = {
        $header: null,
        isCompact: false,
        isFullNavOpen: false,
        onScroll: function() {
            var scrollUp = $("body").scrollTop();
            if (scrollUp > 300 && !this.isCompact) {
                this.$header.addClass("is-compact");
                this.isCompact = true;
            }
            if (scrollUp <= 300 && this.isCompact) {
                this.$header.removeClass("is-compact");
                this.isCompact = false;
            }
        },
        onToggle: function() {
            var $toggle = $("#toggleMobileNav");
            if (!this.isFullNavOpen) {
                this.$header.addClass("is-nav-expand");
            } else {
                this.$header.removeClass("is-nav-expand");
            }
            this.isFullNavOpen = !this.isFullNavOpen;
        },
        onNavItemClick: function() {
            if (this.isFullNavOpen) {
                this.$header.removeClass("is-nav-expand");
                this.isFullNavOpen = false;
            }
        },
        bindEvents: function() {
            $(document).scroll($.proxy(this.onScroll, this));
            $("#toggleMobileNav").click($.proxy(this.onToggle, this));
            $("#topNav .nav > li > a ").click($.proxy(this.onNavItemClick, this));
        },
        isMobileWidth: function() {
            return $("body").outerWidth() < 767;
        },
        init: function() {
            this.$header = $("header");
            this.bindEvents();
            this.onScroll();
        }
    };
})(jQuery, App);

(function($, App) {
    "use strict";
    var self = App.Timely = {
        init: function() {
            $(".js-trigger-timely").click(function() {
                $("#timelyContainer > a").click();
                return false;
            });
        }
    };
})(jQuery, App);

(function(window, $, App) {
    "use strict";
    App.Routes = {
        init: function() {
            App.Nav.init();
            App.Timely.init();
        }
    };
})(window, jQuery, App);
>>>>>>> 81293772bc6daf8c103dadebed050364f6b8e377
